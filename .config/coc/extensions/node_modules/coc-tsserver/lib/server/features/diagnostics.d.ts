import { Diagnostic } from 'vscode-languageserver-protocol';
export declare class DiagnosticSet {
    private _map;
    set(uri: string, diagnostics: Diagnostic[]): void;
    get(uri: string): Diagnostic[];
    clear(): void;
}
export declare enum DiagnosticKind {
    Syntax = 0,
    Semantic = 1,
    Suggestion = 2
}
export declare class DiagnosticsManager {
    private readonly _diagnostics;
    private readonly _currentDiagnostics;
    private _pendingUpdates;
    private _enableJavascriptSuggestions;
    private _enableTypescriptSuggestions;
    private readonly updateDelay;
    constructor();
    dispose(): void;
    reInitialize(): void;
    setEnableSuggestions(languageId: string, value: boolean): void;
    diagnosticsReceived(kind: DiagnosticKind, uri: string, diagnostics: Diagnostic[]): void;
    configFileDiagnosticsReceived(uri: string, diagnostics: Diagnostic[]): void;
    delete(uri: string): void;
    getDiagnostics(uri: string): Diagnostic[];
    private scheduleDiagnosticsUpdate;
    private updateCurrentDiagnostics;
    private getSuggestionDiagnostics;
    private suggestionsEnabled;
}
