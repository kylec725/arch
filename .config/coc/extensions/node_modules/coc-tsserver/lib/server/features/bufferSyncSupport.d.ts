import { Uri } from 'coc.nvim';
import { Event } from 'vscode-languageserver-protocol';
import { ITypeScriptServiceClient } from '../typescriptService';
export default class BufferSyncSupport {
    private readonly client;
    private readonly modeIds;
    private readonly uris;
    private readonly disposables;
    private readonly pendingDiagnostics;
    private readonly diagnosticDelayer;
    private pendingGetErr;
    private readonly synchronizer;
    private _validateJavaScript;
    private _validateTypeScript;
    private listening;
    private readonly _onDelete;
    readonly onDelete: Event<string>;
    constructor(client: ITypeScriptServiceClient);
    listen(): void;
    dispose(): void;
    private onDidOpenTextDocument;
    private onDidCloseTextDocument;
    private onDidChangeTextDocument;
    beforeCommand(command: string): void;
    interuptGetErr<R>(f: () => R): R;
    getErr(resources: Uri[]): any;
    private triggerDiagnostics;
    requestAllDiagnostics(): void;
    requestDiagnostic(uri: string): boolean;
    hasPendingDiagnostics(uri: string): boolean;
    private sendPendingDiagnostics;
    private updateConfiguration;
    shouldValidate(uri: string): boolean;
}
