"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const typeConverters = tslib_1.__importStar(require("../utils/typeConverters"));
class SmartSelection {
    constructor(client) {
        this.client = client;
    }
    provideSelectionRanges(document, positions, token) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const file = this.client.toPath(document.uri);
            if (!file) {
                return undefined;
            }
            const args = {
                file,
                locations: positions.map(typeConverters.Position.toLocation)
            };
            const response = yield this.client.execute('selectionRange', args, token);
            if (response.type !== 'response' || !response.body) {
                return undefined;
            }
            return response.body.map(SmartSelection.convertSelectionRange);
        });
    }
    static convertSelectionRange(selectionRange) {
        return {
            range: typeConverters.Range.fromTextSpan(selectionRange.textSpan),
            parent: selectionRange.parent ? SmartSelection.convertSelectionRange(selectionRange.parent) : undefined,
        };
    }
}
exports.default = SmartSelection;
//# sourceMappingURL=smartSelect.js.map