import { CodeActionProvider, CodeActionProviderMetadata } from 'coc.nvim';
import { CancellationToken, Range, TextDocument, CodeActionContext, CodeAction } from 'vscode-languageserver-protocol';
import { Command } from './commands';
import FileConfigurationManager from './features/fileConfigurationManager';
import TypeScriptServiceClient from './typescriptServiceClient';
export declare class OrganizeImportsCommand implements Command {
    private readonly client;
    readonly id: string;
    constructor(client: TypeScriptServiceClient);
    private getTextEdits;
    execute(document?: TextDocument): Promise<void>;
}
export declare class OrganizeImportsCodeActionProvider implements CodeActionProvider {
    private readonly client;
    private readonly fileConfigManager;
    constructor(client: TypeScriptServiceClient, fileConfigManager: FileConfigurationManager);
    readonly metadata: CodeActionProviderMetadata;
    provideCodeActions(document: TextDocument, _range: Range, context: CodeActionContext, _token: CancellationToken): CodeAction[];
}
